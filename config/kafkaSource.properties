# Kafka properties

# These are defaults. This file just demonstrates how to override some settings.
kafka.bootstrap.servers=ip-172-31-61-44.ec2.internal:9092

# Topic to send to
kafka.topic=marklogic


# MarkLogic connector-specific properties

# A MarkLogic host to connect to.
ml.connection.host=ip-172-31-50-57.ec2.internal

# The port of a REST API server to connect to.
ml.connection.port=8000

# Either DIGEST, BASIC, CERTIFICATE, KERBEROS, or NONE
ml.connection.securityContextType=DIGEST

# Optional - set to "gateway" when using a load balancer, else leave blank. See https://docs.marklogic.com/guide/java/data-movement#id_26583 for more information.
ml.connection.type=

# Set these based on the security context type defined above
ml.connection.username=admin
ml.connection.password=admin
ml.connection.certFile=
ml.connection.certPassword=
ml.connection.externalName=

# Set to "true" for a "simple" SSL strategy that uses the JVM's default SslContext and X509TrustManager and a
# "trust everything" HostnameVerifier. Further customization of an SSL connection via properties is not supported. If
# you need to do so, consider using the source code for this connector as a starting point.
ml.connection.simpleSsl=false

# The name of a collection of documents to be exported. This collection will be removed from the document after it has
# been delivered to Kafka.
ml.query.targetCollection=for-kafka

# The name of a collection of documents to be exported. This collection will be removed from the document after it has
# been delivered to Kafka.
ml.query.sentCollection=sent-to-kafka

# Optional - the name of a database to connect to. If your REST API server has a content database matching that of the
# one that you want to write documents to, you do not need to set this.
ml.query.database=Kafka

ml.query.string=
